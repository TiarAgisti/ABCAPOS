@using ABCAPOS.Helpers
@using ABCAPOS.Models
@using MPL.MVC;
@{
    ViewBag.Title = "Goods Sold By Customer";

    var notifications = ViewBag.NotificationList as List<HomeNotificationModel>;

    var customerGroupList = ViewBag.CustomerGroupList as List<CustomerGroupModel>;
    //var itemSoldList = ViewBag.SalesOrderItemSoldList as List<ProductModel>;

    var menu = MenuHelper.GetMenuList();
    
    List<ProductModel> productList = ViewBag.SalesOrderItemSold;
    productList = productList.OrderByDescending(p => p.QtySold).ToList();
}
<style type="text/css">
    
    table td {
        border: 1px solid #e8eef4;
        padding: 0px;
    }
    
    .genericFilter {
        width:98%;
    }
    
    a:link {
        text-decoration: initial !important;
    }
</style>
<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<link rel="stylesheet" href="@Url.Content("~/Scripts/amcharts/style.css")" type="text/css">
<link rel="stylesheet" href="@Url.Content("~/Content/jquery.dataTables.min.css")" type="text/css">
<script src="@Url.Content("~/Scripts/amcharts/amcharts.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/amcharts/serial.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.dataTables.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var chart;
    
    var chartData = JSON.parse($('#hdnChart1').val());
    var chartData2 = JSON.parse($('#hdnChart2').val());

    AmCharts.ready(function () {
        // SERIAL CHART
        chart = new AmCharts.AmSerialChart();
        chart.dataProvider = chartData;
        chart.categoryField = "Month";
        // the following two lines makes chart 3D
        chart.depth3D = 20;
        chart.angle = 30;
        
        // AXES
        // category
        var categoryAxis = chart.categoryAxis;
        categoryAxis.labelRotation = 90;
        categoryAxis.dashLength = 4;
        categoryAxis.gridPosition = "start";
        
        // value
        var valueAxis = new AmCharts.ValueAxis();
        valueAxis.title = "Total";
        valueAxis.dashLength = 5;
        chart.addValueAxis(valueAxis);

        // GRAPH
        var graph = new AmCharts.AmGraph();
        graph.valueField = "Amount";
        graph.colorField = "color";
        graph.balloonText = "<span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>";
        graph.type = "column";
        graph.lineAlpha = 0;
        graph.fillAlphas = 1;
        chart.addGraph(graph);

        // CURSOR
        var chartCursor = new AmCharts.ChartCursor();
        chartCursor.cursorAlpha = 0;
        chartCursor.zoomable = false;
        chartCursor.categoryBalloonEnabled = false;
        chart.addChartCursor(chartCursor);
        
        // WRITE
        chart.write("chartdiv1");

        // SERIAL CHART
        chart2 = new AmCharts.AmSerialChart();
        chart2.dataProvider = chartData2;
        chart2.categoryField = "Month";
        // the following two lines makes chart 3D
        chart2.depth3D = 20;
        chart2.angle = 30;

        // AXES
        // category
        var categoryAxis2 = chart2.categoryAxis;
        categoryAxis2.labelRotation = 90;
        categoryAxis2.dashLength = 5;
        categoryAxis2.gridPosition = "start";
        
        // value
        var valueAxis2 = new AmCharts.ValueAxis();
        valueAxis2.title = "Total";
        valueAxis2.dashLength = 5;
        chart2.addValueAxis(valueAxis2);

        // GRAPH
        var graph2 = new AmCharts.AmGraph();
        graph2.valueField = "Amount";
        graph2.colorField = "color";
        graph2.balloonText = "<span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>";
        graph2.type = "column";
        graph2.lineAlpha = 0;
        graph2.fillAlphas = 1;
        chart2.addGraph(graph2);

        // CURSOR
        var chartCursor2 = new AmCharts.ChartCursor();
        chartCursor2.cursorAlpha = 0;
        chartCursor2.zoomable = false;
        chartCursor2.categoryBalloonEnabled = false;
        chart2.addChartCursor(chartCursor2);

        chart2.creditsPosition = "top-right";

        // WRITE
        chart2.write("chartdiv2");

    });

</script>   
<script type="text/javascript">
    function initDatePicker() {
        $("input.datepicker").datepicker({
            dateFormat: 'mm/dd/yy', showOn: 'both', buttonImage: '/Content/Icons/calendar.png',
            buttonImageOnly: true
        });
        $('img.ui-datepicker-trigger').css({ 'margin-left': '2px' });
    }
    $(function () {
        $('#btnSearchButton').attr('style', 'color: #ffffff;');
        $('#btnClearSearchButton').attr('style', 'color: #ffffff;');
        window.initDatePicker = function () {
            $("input.datepicker").datepicker({
                dateFormat: 'mm/dd/yy', showOn: 'both', buttonImage: '/Content/Icons/calendar.png',
                buttonImageOnly: true
            });
            $('img.ui-datepicker-trigger').css({ 'margin-left': '2px' });
        }
        initDatePicker();
        $(".genericFilterHeader").html('&nbsp;Goods Sold By Customer');

        $('#tblTopGoodSold').DataTable({
            "iDisplayLength": 20,
            "sDom": 'rtip',
            "order": [[3, "desc"]]
        });
        
    });
</script>
@{
    var floatLeft = "";

    if (menu.Contains("Dashboard"))
    {
        floatLeft = "float:left;";
    }
}
@if (menu.Contains("Dashboard"))
{

    var filterList = new List<GenericFilterField>()
    {
        Html.GenericFilterDateRangeField("TANGGAL","Date", delegate(GenericFilterField gff)
        {
            //gff.Value = "1/1/" + DateTime.Now.Year;
            //gff.Value1 = "12/31/" + DateTime.Now.Year;
        }),
        Html.GenericFilterTextBoxField("CUSTOMER","CustomerName"),
        Html.GenericFilterTextBoxField("PRODUCT CODE","ProductCode"),
        
    };

   @Html.GenericFilter(filterList, delegate(GenericFilter gf)
    {
        gf.SearchButtonID = "btnSearchButton";
        gf.ClearSearchButtonID = "btnClearSearchButton";
    })
    
    <input type="hidden" id="hdnYear" value="@ViewBag.Year" />
<table id="tblTopGoodSold" class="tblTopGoodSold displayGrid" style="width: 98%;border:2px solid #dbdbdb;margin:2px;clear:both;">
    <thead>
     
    <tr>
        <td>CUSTOMER</td>
        <td>PRODUCT CODE</td>
        <td>PRODUCT NAME</td>
        <td>QUANTITY</td>
    </tr> 
    </thead> 
   <tbody>
       @foreach (ProductModel prod in productList)
       {
          <tr>
            <td style="text-align:left;width:15%;">@prod.CustomerName</td>
            <td style="text-align:center;width:15%;">@prod.ProductCode</td>
            <td>@prod.ProductName</td>
            <td style="text-align:right;width:15%;">@Convert.ToDecimal(@prod.QtySold).ToString("N0")</td>
        </tr>           
       }
    </tbody> 
    

</table>
<br />
}