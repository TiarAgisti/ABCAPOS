@using MPL.MVC;
@using ABCAPOS.Util;
@using ABCAPOS.Models;
@model List<ResiModel>
@{
    var dataCount = (int)ViewBag.DataCount;
    var pageSize = (int)ViewBag.PageSize;
    var startIndex = (int)ViewBag.StartIndex;
    var selectedPage = startIndex / pageSize + 1;
    var pageAmount = (dataCount / 20);

    if (dataCount % 20 != 0)
    {
        pageAmount += 1;
    }

    var statement = string.Format("Page: {0} of {1}", selectedPage, pageAmount);
  
    var gridColumns = new List<GridColumn>()
    {
        Html.LabelColumn("Code","NO RESI","120px"),
        Html.DateColumn("Date","DATE"),
        Html.LabelColumn("ExpeditionName","EXPEDITION"),
        Html.LabelColumn("CustomerName","CUSTOMER"),
        Html.LabelColumn("SalesOrderCodeList", "NO. REF SO"),
        Html.LabelColumn("Amount", "AMOUNT","",delegate(GridColumn col){
            col.DetailFormat = "N2";
        }),
        Html.LabelColumn("StatusDescription","STATUS","", delegate(GridColumn col){
            col.SortField = "Status";
        }),
    };

    var statusList = new List<DropDownOption>()
    {
        new DropDownOption(){ Value = Convert.ToString((int)ResiStatus.New), Text = ResiStatus.New.ToString() },
        new DropDownOption(){ Value = Convert.ToString((int)ResiStatus.PartialyBilling), Text = "Partialy Billing" },
        new DropDownOption(){ Value = Convert.ToString((int)ResiStatus.PendingBilling), Text = "Pending Billing" },
        new DropDownOption(){ Value = Convert.ToString((int)ResiStatus.FullBilling), Text = "Full Billing" },
        new DropDownOption(){ Value = Convert.ToString((int)ResiStatus.Void), Text = ResiStatus.Void.ToString() },
    };
    
    var filterList = new List<GenericFilterField>()
    {
        Html.GenericFilterDateRangeField("DATE","Date"),
        Html.GenericFilterTextBoxField("NO RESI","Code"),
        Html.GenericFilterTextBoxField("EXPEDITION","ExpeditionName"),
        Html.GenericFilterTextBoxField("CUSTOMER","CustomerName"),
        Html.GenericFilterDropDownField("STATUS","Status",statusList,typeof(int))
    };

    var detailButton = new GridButtonColumn();
    detailButton.CssClass = "iconContainer";
    detailButton.ButtonCssClass = "details imageButton";
    detailButton.Href = Url.Content("~/Resi/Detail?key=@idPropertyValue");
    detailButton.IDPropertyName = "ID";
    detailButton.Text = "Detail";
    
    var grid = new Grid();
    grid.Columns = gridColumns;

    grid.Buttons.Add(detailButton);
    
}
<script type="text/javascript">
    $(function () {
        if ($.urlParam('filter.FilterFields%5B0%5D.Selected') == null) {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();

            today = mm + '/' + dd + '/' + yyyy;
            $("#filter_FilterFields_0_Value").val(today);
        }
    });

    $(document).ready(function () {
        window.initDatePicker = function () {
            $("input.datepicker").datepicker({
                dateFormat: 'mm/dd/yy', showOn: 'both', buttonImage: '/Content/Icons/calendar.png',
                buttonImageOnly: true
            });
            $('img.ui-datepicker-trigger').css({ 'margin-left': '2px' });
        }
    });
</script>
@Html.GenericFilter(filterList)
@Html.IndexGrid(grid, Model, "Resi", "ID", "Code", null, delegate(object obj, UIMode mode)
    {
        return false;
    }, delegate(IndexGridHelper helper)
    {
        if (Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.AddNewButton.Visible = true;
        }
        else
        {
            helper.AddNewButton.Visible = false;
        }
    })
<br />
@statement