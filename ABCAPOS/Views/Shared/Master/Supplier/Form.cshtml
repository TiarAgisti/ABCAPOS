@using MPL.MVC;
@using ABCAPOS.Models;
@using ABCAPOS.Util;
@model SupplierModel
@{
    var mode = (UIMode)ViewBag.Mode;

    var yesNoRadio = new List<RadioOption>()
    {
        new RadioOption(){ Value = true,Text = "Active", ReadOnly = mode == UIMode.Detail},
        new RadioOption(){ Value = false,Text = "Not-Active", ReadOnly = mode == UIMode.Detail},
    };

    var groupList = ViewBag.GroupList as List<SupplierGroupModel>;
    var ddlGroup = Util.GetDropDownOptions(groupList, "Name", "ID");

    var formFields = new List<IFormField>()
    {
        Html.HiddenFieldFieldObjFor(p=>p.ID,""),
        Html.HiddenFieldFieldObjFor(p=>p.IsActive,""),
        Html.LabelFieldObjFor(p=>p.Code,"Code", delegate(FormField f){
            f.UpdateFieldType = FormFieldType.Label;
            f.GenerateHiddenField = true;
        }),
        Html.TextBoxFieldObjFor(p=>p.Name,"Name", delegate(FormField f){
            f.Style = "width:400px";
        }),
        Html.TextAreaFieldObjFor(p=>p.Address,"Address", delegate(FormField f){
            f.Style = "width:400px";
        }),
        Html.TextBoxFieldObjFor(p=>p.City,"City"),
        Html.TextBoxFieldObjFor(p=>p.Phone,"Phone"),
        Html.TextBoxFieldObjFor(p=>p.Fax,"Fax"),
        Html.TextBoxFieldObjFor(p=>p.ContactPerson,"Contact Person"),
        Html.TextBoxFieldObjFor(p=>p.TaxFileNumber,"No NPWP"),
        
        Html.DropDownFieldObjFor(p=>p.SupplierGroupID,"Supplier Group",ddlGroup),
        Html.LabelFieldObjFor(p=>p.SupplierGroupName,"Supplier Group",delegate(FormField f)
        {
            f.CreateFieldType = f.UpdateFieldType = FormFieldType.None;
        }),
        
    };

    var form = new Form();
    form.Fields = formFields;

}
<script type="text/javascript">
    $(function () {
        $("#btnCancel").text("Cancel");
        $("#btnCreate").text("Save");
        $("#btnEdit").text("Edit");
        $("#btnBackToList").text("Back To List");
    });
</script>
@Html.MasterForm(form, Model, mode, "Supplier", "ID", delegate(MasterFormHelper<SupplierModel> helper)
{
    if (mode == UIMode.Detail)
    {
        helper.CreateAnotherButton.Text = "Create New";
        if (!Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.CreateAnotherButton.Visible = false;
        }

        if (!Convert.ToBoolean(ViewBag.AllowEdit))
        {
            helper.EditButton.Visible = false;
        }

        helper.DeleteButton.Visible = false;
    }
})
