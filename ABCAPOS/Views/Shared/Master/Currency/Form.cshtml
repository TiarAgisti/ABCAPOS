@using MPL.MVC;
@using ABCAPOS.Models;
@using ABCAPOS.Util;
@model CurrencyModel
@{
    var mode = (UIMode)ViewBag.Mode;

    var formFields = new List<IFormField>()
    {
        Html.HiddenFieldFieldObjFor(p=>p.ID,""),
        
        Html.TextBoxFieldObjFor(p=>p.Name,"NAMA", delegate(FormField f){
            f.Style = "width:400px";
        }),
    };

    var form = new Form();
    form.Fields = formFields;

    var gridColumns = new List<GridColumn>()
    {
        Html.DateColumn("Date","TANGGAL"),
        Html.DecimalColumn("Value","NILAI KURS"),
    };

    var addNewButton = new Button();
    addNewButton.Text = "Add New";
    addNewButton.Href = Url.Content("~/CurrencyDate/Create?currencyID=" + Model.ID);
    addNewButton.CssClass = "button";

    var grid = new Grid();
    grid.Columns = gridColumns;
    grid.AboveButtons.Add(addNewButton);

    TabbedGrid tabbedGrid = new TabbedGrid();
    if (mode == UIMode.Detail)
    {
        tabbedGrid.AddGrid("Nilai", grid, ViewBag.Details);
    }
}
<script>
    $(function () {
        $("#tabs").tabs();
    });
</script>
@Html.MasterForm(form, Model, mode, "Currency", "ID", delegate(MasterFormHelper<CurrencyModel> helper)
{
    if (mode == UIMode.Detail)
    {
        if (!Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.CreateAnotherButton.Visible = false;
        }

        if (!Convert.ToBoolean(ViewBag.AllowEdit))
        {
            helper.EditButton.Visible = false;
        }

        helper.DeleteButton.Visible = false;
    }
})
<br />
<br />
@if (mode == UIMode.Detail)
{
    @tabbedGrid.Render(Request, mode);
}