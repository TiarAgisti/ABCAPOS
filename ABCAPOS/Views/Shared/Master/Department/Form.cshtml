@using MPL.MVC;
@using ABCAPOS.Models;
@using ABCAPOS.Util;
@model DepartmentModel
@{
    var mode = (UIMode)ViewBag.Mode;

    //var roleRadio = new List<RadioOption>()
    //{
    //    new RadioOption(){ Value = (int)StaffType.Courier,Text = "Kurir", ReadOnly = mode == UIMode.Detail},
    //    new RadioOption(){ Value = (int)StaffType.Operator,Text = "Operator", ReadOnly = mode == UIMode.Detail},
    //    new RadioOption(){ Value = (int)StaffType.Others,Text = "Others", ReadOnly = mode == UIMode.Detail},
    //};

    var yesNoRadio = new List<RadioOption>()
    {
        new RadioOption(){ Value = true,Text = "Active", ReadOnly = mode == UIMode.Detail},
        new RadioOption(){ Value = false,Text = "Not Active", ReadOnly = mode == UIMode.Detail},
    };

    var departmentList = ViewBag.DepartmentList as IEnumerable<DepartmentModel>;
    var ddlDepartment = new List<DropDownOption>()
    {
        new DropDownOption(){Value = Convert.ToString((int)0), Text = "" }
    };
    ddlDepartment.AddRange(Util.GetDropDownOptions(departmentList, "DepartmentDesc", "ID"));

    var formFields = new List<IFormField>()
    {
        Html.HiddenFieldFieldObjFor(p=>p.ID,""),
        
        Html.TextBoxFieldObjFor(p=>p.Name,"Name", delegate(FormField f){
            f.Style = "width:400px";
            f.UpdateFieldType = FormFieldType.Label;
            f.GenerateHiddenField = true;
        }),
        
        Html.RadioButtonFieldObjFor(p=>p.IsActive,"Status", yesNoRadio),
        
        Html.DropDownFieldObjFor(p=>p.SubDepartmentOf, "SUBDEPARTMENT OF", ddlDepartment, 
            delegate(FormField f)
            {
                f.Style = "width:300px";
            }),
        Html.LabelFieldObjFor(p=>p.SubDepartmentOfDesc, "SUBDEPARTMENT OF", delegate(FormField f)
        {
            f.CreateFieldType = f.UpdateFieldType = FormFieldType.None;
        }),
        
    };

    var form = new Form();
    form.Fields = formFields;

}
@Html.MasterForm(form, Model, mode, "Department", "ID", delegate(MasterFormHelper<DepartmentModel> helper)
{
    if (mode == UIMode.Detail)
    {
        if (!Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.CreateAnotherButton.Visible = false;
        }
        
        if (!Convert.ToBoolean(ViewBag.AllowEdit))
        {
            helper.EditButton.Visible = false;
        }

        helper.DeleteButton.Visible = false;
    }
})
