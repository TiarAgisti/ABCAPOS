@using MPL.MVC;
@using ABCAPOS.Models;
@using ABCAPOS.Util;
@model SalesmanModel
@{
    var mode = (UIMode)ViewBag.Mode;

    var radioList = new List<RadioOption>()
    {
        new RadioOption(){ Value = true,Text = "Aktif", ReadOnly = mode == UIMode.Detail},
        new RadioOption(){ Value = false,Text = "Tidak Aktif", ReadOnly = mode == UIMode.Detail},
    };

    List<SelectListItem> categoryList = new List<SelectListItem>(){
        new SelectListItem(){ Value = Convert.ToString((int)ProductCategory.Product), Text = "Product" }, 
        new SelectListItem(){ Value = Convert.ToString((int)ProductCategory.Service), Text = "Service" }, 
        new SelectListItem(){ Value = Convert.ToString((int)ProductCategory.NonStock), Text = "Non-Stock" }
    };
    var ddlCategory = Util.GetDropDownOptions(categoryList, "Text", "Value");

    var ddlUser = Util.GetDropDownOptions(ViewBag.UserList as List<UserModel>, "UserID", "UserID");

    var formFields = new List<IFormField>()
    {
        Html.HiddenFieldFieldObjFor(p=>p.ID,""),
        Html.HiddenFieldFieldObjFor(p=>p.IsActive,""),
        
        Html.LabelFieldObjFor(p=>p.Code,"Kode", delegate(FormField f){
            f.UpdateFieldType = FormFieldType.Label;
            f.GenerateHiddenField = true;
        }),
        
        Html.TextBoxFieldObjFor(p=>p.Name,"Nama", delegate(FormField f){
            f.Style = "width:400px";
        }),
        
        Html.TextAreaFieldObjFor(p=>p.Address,"Alamat", delegate(FormField f){
            f.Style = "width:400px";
        }),
        
        Html.TextBoxFieldObjFor(p=>p.City,"Kota"),
        Html.TextBoxFieldObjFor(p=>p.State,"Propinsi", delegate(FormField f){
            f.Style = "width:400px";
        }),
        
        Html.TextBoxFieldObjFor(p=>p.Phone1,"Telepon 1"),
        Html.TextBoxFieldObjFor(p=>p.Phone2,"Telepon 2"),
        Html.TextBoxFieldObjFor(p=>p.Phone3,"Telepon 3"),
        
        //Html.TextBoxFieldObjFor(p=>p.Position,"Jabatan"),
        
        //Html.DropDownFieldObjFor(p=>p.UserID,"Username", ddlUser),
        //Html.LabelFieldObjFor(p=>p.UserID,"Username",delegate(FormField f){
        //    f.CreateFieldType = f.UpdateFieldType = FormFieldType.None;
        //}),
        
        //Html.RadioButtonFieldObjFor(p=>p.IsActive,"Status", radioList),
    };

    var form = new Form();
    form.Fields = formFields;

}
@Html.MasterForm(form, Model, mode, "Salesman", "ID", delegate(MasterFormHelper<SalesmanModel> helper)
{
    if (mode == UIMode.Detail)
    {
        if (!Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.CreateAnotherButton.Visible = false;
        }

        if (!Convert.ToBoolean(ViewBag.AllowEdit))
        {
            helper.EditButton.Visible = false;
        }

        helper.DeleteButton.Visible = false;
    }
})
@*@using (Html.BeginForm(action, "Salesman", FormMethod.Post, new { id = "EditForm", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(p => p.ID)
    <tr>
        <td>
            Tanda Tangan
        </td>
        <td>
            :
        </td>
        <td>
            <input type="file" name="file" id="file" />
        </td>
    </tr>
}
*@