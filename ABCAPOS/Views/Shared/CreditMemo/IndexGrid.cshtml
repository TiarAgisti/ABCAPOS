@using MPL.MVC;
@using ABCAPOS.Util;
@using ABCAPOS.Models;
@model List<CreditMemoModel>
@{
    var dataCount = (int)ViewBag.DataCount;
    var pageSize = (int)ViewBag.PageSize;
    var startIndex = (int)ViewBag.StartIndex;
    var selectedPage = startIndex / pageSize + 1;
    var pageAmount = (dataCount / 20);

    if (dataCount % 20 != 0)
    {
        pageAmount += 1;
    }

    var statement = string.Format("Page: {0} of {1}", selectedPage, pageAmount);

    var statusList = new List<DropDownOption>()
    {
        new DropDownOption(){ Value = "Not Applied", Text = "Not Applied" },
        new DropDownOption(){ Value = "Fully Applied", Text = "Fully Applied" },
        new DropDownOption(){ Value = "Partially Applied", Text = "Partially Applied" },
    };
  
    var gridColumns = new List<GridColumn>()
    {
        Html.LabelColumn("CustomerReturnID","RETURN ID","",delegate(GridColumn col){
            col.DetailColumnType = GridColumnType.HiddenField;
        }),
        Html.LabelColumn("Title","MEMO","",delegate(GridColumn col){
            col.DetailColumnType = GridColumnType.HiddenField;
        }),
        Html.LabelColumn("Code","CREDIT MEMO NO","80px"),
        Html.DateColumn("Date","TANGGAL"),
        Html.LabelColumn("CustomerReturnCode","CUSTOMER RETURN NO","80px"),
        Html.LabelColumn("CustomerName","CUSTOMER"),
        Html.DecimalColumn("Total","JUMLAH", "",delegate(GridColumn col){
            col.DetailFormat = "N0";
        }),
        Html.LabelColumn("StatusDesc","STATUS", "",delegate(GridColumn col){
            col.SortField = "Status";
        })
    };

    //var statusList = new List<DropDownOption>()
    //{
    //    new DropDownOption(){ Value = Convert.ToString((int)MPL.DocumentStatus.New), Text = MPL.DocumentStatus.New.ToString() },
    //    new DropDownOption(){ Value = Convert.ToString((int)MPL.DocumentStatus.Approved), Text = "CreditMemo" },
    //    new DropDownOption(){ Value = Convert.ToString((int)MPL.DocumentStatus.Void), Text = MPL.DocumentStatus.Void.ToString() },
    //};

    var customerGroupList = ViewBag.CustomerGroupList as List<CustomerGroupModel>;
    var ddlCustomerGroup = Util.GetDropDownOptions(customerGroupList, "Name", "ID");
    var warehouseList = ViewBag.WarehouseList as List<WarehouseModel>;
    var ddlWarehouse = Util.GetDropDownOptions(warehouseList, "Name", "Name");
    
    var filterList = new List<GenericFilterField>()
    {
        Html.GenericFilterDateRangeField("TRANSACTION DATE","Date"),
        Html.GenericFilterTextBoxField("CREDIT MEMO NO","Code"),
        Html.GenericFilterTextBoxField("CUSTOMER","CustomerName"),
        Html.GenericFilterDropDownField("LOCATION","WarehouseName", ddlWarehouse, typeof(string)),
        //Html.GenericFilterDropDownField("Grup Pelanggan","CustomerGroupID", ddlCustomerGroup,typeof(long)),
        Html.GenericFilterDropDownField("Status","StatusDesc",statusList,typeof(string))
    };

    var detailButton = new GridButtonColumn();
    detailButton.CssClass = "iconContainer";
    detailButton.ButtonCssClass = "details imageButton";
    detailButton.Href = Url.Content("~/CreditMemo/Detail?key=@idPropertyValue");
    detailButton.IDPropertyName = "ID";
    detailButton.Text = "Detail";

    //var printButton = new GridButtonColumn();
    //printButton.CssClass = "iconContainer";
    //printButton.ButtonCssClass = "print imageButton";
    //printButton.OnClick = "if (confirm('Are you sure you want to print this document?')) { " + String.Format("window.open('{0}');", Url.Action("PopUp", "ReportViewer", new { type = ABCAPOS.Controllers.ReportViewerController.PrintOutType.CreditMemo, queryString = "creditMemoID=@idPropertyValue" })) + " } ";
    //printButton.IDPropertyName = "ID";
    //printButton.ShowDelegate = delegate(object obj, UIMode mode)
    //{
    //    var creditMemo = obj as CreditMemoModel;

    //    if (creditMemo.Status >= (int)MPL.DocumentStatus.New)
    //        return true;

    //    return false;
    //};
    //printButton.Text = "Print";

    var voidButton = new GridButtonColumn();
    voidButton.CssClass = "iconContainer";
    voidButton.ButtonCssClass = "cancel imageButton";
    voidButton.Href = Url.Content("~/CreditMemo/VoidRemarks?key=@idPropertyValue&voidFromIndex=true");
    voidButton.IDPropertyName = "ID";
    voidButton.ShowDelegate = delegate(object obj, UIMode mode)
    {
        var PurchaseOrder = obj as CreditMemoModel;

        if (PurchaseOrder.Status != (int)MPL.DocumentStatus.Void)
            return true;

        return false;
    };
    voidButton.Text = "Void";
    
    var grid = new Grid();
    grid.Columns = gridColumns;
    grid.Buttons.Add(detailButton);
    //grid.Buttons.Add(printButton);
    
    if (Convert.ToBoolean(ViewBag.AllowVoid))
    {
        grid.Buttons.Add(voidButton);
    }
    
    
}
<script type="text/javascript">
    $(function () {

        $(".cancel").live("click", function (e) {
            e.preventDefault();
            $(" <div></div>")
                .addClass("dialog")
                .attr("id", $(this).attr("data-dialog-id"))
                .appendTo("body").dialog({
                    title: "Void Remarks",
                    close: function () {
                        $(this).remove();
                    },
                    modal: true,
                    height: 180,
                    width: 700,
                    left: 0
                }).load(this.href);
        });

        $("#btnCloseVoidForm").live("click", function (e) {
            e.preventDefault();
            $(this).closest(".dialog").dialog("close");
        });


        addTooltip();
        if ($.urlParam('filter.FilterFields%5B0%5D.Selected') == null) {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();

            today = mm + '/' + dd + '/' + yyyy;
            $("#filter_FilterFields_0_Value").val(today);
        }
    });
    $(document).ready(function () {
        window.initDatePicker = function () {
            $("input.datepicker").datepicker({
                dateFormat: 'mm/dd/yy', showOn: 'both', buttonImage: '/Content/Icons/calendar.png',
                buttonImageOnly: true
            });
            $('img.ui-datepicker-trigger').css({ 'margin-left': '2px' });
        }
    });
    function addTooltip() {
        var noOfRows = $("#Grid1 tbody tr").length;

        for (x = 0; x < noOfRows; x++) {
            var customerReturnID = $("#Details_" + x + "_CustomerReturnID").val();
            var customerReturnCode = $("#Details_" + x + "_CustomerReturnCode").text();
            var customerReturnTitle = $("#Details_" + x + "_CustomerReturnTitle").val();

            var customerReturnLink = "/CustomerReturn/Detail?key=" + customerReturnID;

            $("#Details_" + x + "_CustomerReturnCode").replaceWith('<a href="' + customerReturnLink + '" title="' + customerReturnTitle + '">' + customerReturnCode + '</a>');
        }
    }
</script>
@Html.GenericFilter(filterList)
@Html.IndexGrid(grid, Model, "CreditMemo", "ID", "Code", null, delegate(object obj, UIMode mode)
    {
        return false;
    }, delegate(IndexGridHelper helper)
    {
        if (Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.AddNewButton.Visible = true;
        }
        else
        {
            helper.AddNewButton.Visible = false;
        }
    })
<br />
@statement